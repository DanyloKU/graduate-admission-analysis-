{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":228180,"sourceType":"datasetVersion","datasetId":14872}],"dockerImageVersionId":30732,"isInternetEnabled":false,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"import numpy as np\nimport pandas as pd\n\nimport matplotlib.pyplot as plt\n\nimport tensorflow as tf\nfrom tensorflow\timport keras\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.callbacks import EarlyStopping\nfrom tensorflow.keras import layers\nfrom tensorflow.keras.layers import Dense,Input\nfrom sklearn.compose import ColumnTransformer\nfrom sklearn.metrics import r2_score\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-06-18T17:40:12.740700Z","iopub.execute_input":"2024-06-18T17:40:12.742009Z","iopub.status.idle":"2024-06-18T17:40:27.541844Z","shell.execute_reply.started":"2024-06-18T17:40:12.741970Z","shell.execute_reply":"2024-06-18T17:40:27.540640Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df = pd.read_csv('/kaggle/input/graduate-admissions/Admission_Predict.csv')\n\nlabels = df.iloc[:, -1]\nfeatures = df.iloc[:,1:-1]\nprint(labels.head())\nprint(features.head())\n\nfeatures_train, features_test, labels_train, labels_test = train_test_split(features, labels, test_size=0.25, random_state = 42)\n\nscaler = StandardScaler()\n\nfeatures_train_scaled = scaler.fit_transform(features_train)\nfeatures_test_scaled = scaler.transform(features_test)","metadata":{"execution":{"iopub.status.busy":"2024-06-18T17:40:27.544319Z","iopub.execute_input":"2024-06-18T17:40:27.545176Z","iopub.status.idle":"2024-06-18T17:40:27.597875Z","shell.execute_reply.started":"2024-06-18T17:40:27.545130Z","shell.execute_reply":"2024-06-18T17:40:27.596700Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"model = Sequential()\nmodel.add(Input(shape=(7,)))\nmodel.add(Dense(16, activation='relu'))\nmodel.add(Dense(8, activation='relu'))\nmodel.add(Dense(1, activation='linear'))\nmodel.compile(optimizer='adam', loss='mse', metrics=['accuracy','mae'])\nmodel.summary()","metadata":{"execution":{"iopub.status.busy":"2024-06-18T17:40:27.599353Z","iopub.execute_input":"2024-06-18T17:40:27.599736Z","iopub.status.idle":"2024-06-18T17:40:27.716679Z","shell.execute_reply.started":"2024-06-18T17:40:27.599707Z","shell.execute_reply":"2024-06-18T17:40:27.715536Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"es = EarlyStopping(\n                    patience=10,\n                    min_delta=0.0001,                               \n                    monitor=\"val_loss\",\n                    restore_best_weights=True\n                    )","metadata":{"execution":{"iopub.status.busy":"2024-06-18T17:40:27.718998Z","iopub.execute_input":"2024-06-18T17:40:27.719350Z","iopub.status.idle":"2024-06-18T17:40:27.724672Z","shell.execute_reply.started":"2024-06-18T17:40:27.719320Z","shell.execute_reply":"2024-06-18T17:40:27.723501Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"history = model.fit(features_train_scaled, labels_train, epochs=100, verbose=1, batch_size=4, validation_split=0.25, callbacks=[es])\n\naccuracy, mse, mae = model.evaluate(features_test_scaled, labels_test)\nprint(f\"Test Loss: {mse}\")\nprint(f\"Test MAE: {mae}\")\nprint(f\"Test accuracy: {accuracy}\")","metadata":{"execution":{"iopub.status.busy":"2024-06-18T17:40:27.725916Z","iopub.execute_input":"2024-06-18T17:40:27.726268Z","iopub.status.idle":"2024-06-18T17:40:40.563126Z","shell.execute_reply.started":"2024-06-18T17:40:27.726241Z","shell.execute_reply":"2024-06-18T17:40:40.561888Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"predictions = model.predict(features_test_scaled)\nr2 = r2_score(labels_test, predictions)\nprint(f\"Test RÂ² Score: {r2}\")","metadata":{"execution":{"iopub.status.busy":"2024-06-18T17:40:40.564667Z","iopub.execute_input":"2024-06-18T17:40:40.565035Z","iopub.status.idle":"2024-06-18T17:40:40.727386Z","shell.execute_reply.started":"2024-06-18T17:40:40.565005Z","shell.execute_reply":"2024-06-18T17:40:40.726168Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"fig = plt.figure()\nplt1 = fig.add_subplot(2, 1, 1)\nplt1.plot(history.history['mae'])\nplt1.plot(history.history['val_mae'])\nplt1.set_title('model mae')\nplt1.set_ylabel('MAE')\nplt1.set_xlabel('epoch')\nplt1.legend(['train', 'validation'], loc='upper left')\nplt.subplots_adjust(hspace=0.5)\n\nplt2 = fig.add_subplot(2, 1, 2)\nplt2.plot(history.history['loss'])\nplt2.plot(history.history['val_loss'])\nplt2.set_title('model loss')\nplt2.set_ylabel('loss')\nplt2.set_xlabel('epoch')\nplt2.legend(['train', 'validation'], loc='upper left')\n","metadata":{"execution":{"iopub.status.busy":"2024-06-18T17:40:40.728901Z","iopub.execute_input":"2024-06-18T17:40:40.729243Z","iopub.status.idle":"2024-06-18T17:40:41.314136Z","shell.execute_reply.started":"2024-06-18T17:40:40.729215Z","shell.execute_reply":"2024-06-18T17:40:41.313147Z"},"trusted":true},"execution_count":null,"outputs":[]}]}